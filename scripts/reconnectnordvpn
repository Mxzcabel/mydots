#! /bin/bash
#-----------------------------------------------------------
# Script to reconnect to Nordvpn after suspend or hibernate
#-----------------------------------------------------------

# Print which country NordVPN is connected before disconnection
function getLand () {
	printf '%s' "$(nordvpn status | sed -n 's/Country: \([A-Z][a-z]*\)/\1/p')"
}

# Print the connection status
function connectionStatus () {
	printf '%s' "$(nordvpn status | sed -n 's/Status: \([A-Z]\)/\1/p')"
}

# Match the country requested and print if available
function getCountry () {
	printf '%s' "$(awk '{ for(i=1;i<=NF;i++) print $i }' $1 | sed -En "s/^($2)/\1/p")"
}

# If connection status is "Connected", then return 0, if not, return 1
function testConnection () {
	[[ $(connectionStatus) == "Connected" ]] && return 0 || return 1
}

# Redo the connection until is connected again
function redoConnection () {
	testConnection && nordvpn disconnect
	sleep 2
	nordvpn set tray off

	while ! testConnection; do
		nordvpn connect "$printCountry"
		sleep 5
	done

	nordvpn set tray on

	# Remove file if it exists
	[[ -f $tmpfile ]] && rm $tmpfile
}

if [[ -z $1 ]]; then
	[[ $(getLand) == "" ]] && printf '%s' "No country set within NordVPN status." && exit 0
	printCountry=$(printf '%s' $(getLand))
else
	#----------------------------------------------
	# If a given country is set to the argument,
	# generate a temporary list.
	# ---------------------------------------------
	tmpfile=$(printf '%s' "/tmp/countries")

	nordvpn countries > $tmpfile
	printCountry=$(getCountry "$tmpfile" "$1")

	if [[ $printCountry == "" ]]; then
		printf '%s' "No available country with this name was found on the list."
		rm $tmpfile
		exit 0
	fi
fi

# Try to reconnect here
redoConnection
exit 0
